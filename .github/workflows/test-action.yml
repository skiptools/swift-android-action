name: swift-android-action ci
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  builds:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-24.04', 'macos-15-intel']
        #os: ['ubuntu-24.04', 'ubuntu-22.04', 'macos-13', 'macos-15', 'macos-26']
        #swift-version: ['6.0', '6.1']
        #swift-version: ['6.0', '6.1', '6.1.1', '6.2']
        swift-version: ['6.1', '6.2', 'nightly-main']
        ndk-version: ['27', 'latest']
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4
        with:
          path: swift-android-action

      - name: Checkout jpsim/Yams
        uses: actions/checkout@v4
        with:
          repository: jpsim/Yams
          path: jpsim/Yams
      - name: Fix jpsim/Yams for Android
        working-directory: jpsim/Yams
        run: |
          # Android tests that use measure have too high a stddev
          perl -pi -e 's;self.measure ;do ;g' Tests/YamsTests/PerformanceTests.swift
      - name: Test jpsim/Yams
        uses: ./swift-android-action/
        with:
          package-path: jpsim/Yams
          swift-version: ${{ matrix.swift-version }}
          ndk-version: ${{ matrix.ndk-version }}
          copy-files: Tests
          test-env: TEST_WORKSPACE=1

      - name: Checkout apple/swift-system
        uses: actions/checkout@v4
        with:
          repository: apple/swift-system
          path: apple/swift-system
      - name: Test apple/swift-system
        uses: ./swift-android-action/
        with:
          package-path: apple/swift-system
          swift-version: ${{ matrix.swift-version }}
          ndk-version: ${{ matrix.ndk-version }}

      - name: Checkout skiptools/swift-android-native
        uses: actions/checkout@v4
        with:
          repository: skiptools/swift-android-native
          path: skiptools/swift-android-native
      - name: Test skiptools/swift-android-native
        # disabled due to mysterious failures
        if: false
        uses: ./swift-android-action/
        with:
          package-path: skiptools/swift-android-native
          swift-version: ${{ matrix.swift-version }}
          ndk-version: ${{ matrix.ndk-version }}
          run-tests: ${{ env.RUNNER_ARCH != 'ARM64' }} # no tests on macOS ARM

  toolchain-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-24.04', 'macos-26']
        #os: ['ubuntu-24.04', 'ubuntu-22.04', 'macos-13', 'macos-15', 'macos-26']
        #swift-version: ['6.0', '6.1', '6.2']
        swift-version: ['6.1', '6.2']
        ndk-version: ['27', 'latest']
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4
        with:
          path: swift-android-action
      - name: Setup Toolchain
        id: setup-toolchain
        uses: ./swift-android-action/
        #uses: swift-android-sdk/swift-android-action@v2
        with:
          # just set up the toolchain and don't build anything
          build-package: false
          swift-version: ${{ matrix.swift-version }}
          ndk-version: ${{ matrix.ndk-version }}
      - name: Checkout apple/swift-algorithms
        uses: actions/checkout@v4
        with:
          repository: apple/swift-algorithms
          path: apple/swift-algorithms
      - name: Build Package With Toolchain
        working-directory: apple/swift-algorithms
        run: |
          echo "SWIFT COMMAND: ${{ steps.setup-toolchain.outputs.swift-build }}"
          ${{ steps.setup-toolchain.outputs.swift-build }} -c debug
          ls -la .build/${{ steps.setup-toolchain.outputs.swift-sdk }}/debug
          ${{ steps.setup-toolchain.outputs.swift-build }} -c release
          ls -la .build/${{ steps.setup-toolchain.outputs.swift-sdk }}/release

